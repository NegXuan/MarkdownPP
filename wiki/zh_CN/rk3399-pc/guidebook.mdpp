# 上手指南

ROC-RK3399-PC 支持从以下存储设备启动：

- SD 卡
- eMMC

我们需要将系统固件烧写到 SD 卡或 eMMC 里，这样开发板上电后才能正常启动进入操作系统。

<a id="firmware-format"></a>

## 固件格式

固件有两种格式：

- 原始固件(raw firmware)
- RK固件(Rockchip firmware)

<a id="raw-firmware-format"></a>

<font color=#ff0000 >原始固件</font>:
	是一种能以逐位复制的方式(dd)烧写到存储设备的固件，是存储设备的原始映像。一般用来制作 SD 卡实现SD卡启动。

<a id="rk-firmware-format"></a>

<font color=#ff0000 >RK固件</font>:
	是以 Rockchip专有格式打包的固件，多用于烧写emmc实现emmc启动。

<a id="partition-image"></a>

<font color=#ff0000 >分区映像</font>:
	是分区的映像数据，用于存储设备对应分区的烧写。例如，编译 Android SDK会构建出 `boot.img`、`kernel.img`和`system.img`等分区映像文件，`kernel.img` 会被写到eMMC 或 SD 卡的 "kernel" 分区。

<font color=#ff0000 size=5>注意！！！</font>

1.<font color=#ff0000 >官方固件</font>:
	固件名带`sd`/`SDBOOT`字样的固件为[原始固件]，用于制作SD卡，其余的为[RK 固件]用于烧写emmc。

2.<font color=#ff0000 >DIY固件</font>:
	在[《linux-sdk使用》]一节中，使用sdk中`./build.sh updateimg`打包出来的是[RK 固件]，用于烧写emmc;使用`./build.sh sdbootimg`打包出来的是[原始固件],用于制作SD卡。

## 下载和烧写固件


以下是支持的系统列表：

- Android 8.1
- Ubuntu 18.04
- Debian 9

根据所使用的操作系统来选择合适的工具去烧写固件：

- 烧写 SD卡
    + 图形界面烧写工具：
        * [Etcher] (windows/linux/Mac)
    + 命令行烧写工具
        * [dd] (Linux)
- 烧写 eMMC
    + 图形界面烧写工具：
        * [AndroidTool] (Windows)
    + 命令行烧写工具：
        * [upgrade_tool] (Linux)

## 开发板上电启动

在开发板上电启动前，确认以下事项：

- 可启动的 SD 卡或eMMC
- 15V3A PD 电源

由于开发板通过Typec-0供电，同时Typec-0支持DP视频信号输出，所以开机分为两种情况：

* 接独立PD电源：

1. 断电状态下插入可启动的 SD 卡或eMMC 之一。
2. 插入 HDMI 线、USB 鼠标或键盘（可选）。
3. 检查一切连接正常后，**Typec-0**接上PD电源上电。


* 接显示屏Tpye-C口，输出信号的同时通过显示屏给板子供电

1. 断电状态下插入可启动的 SD 卡或eMMC 之一。
2. 插入 HDMI 线、USB 鼠标或键盘（可选）。
3. 检查一切连接正常后，**Typec-0**接上显示屏的Typec口上电。

**注意**：板子上有两个Typec接口，**电源输入只能接Typec-0口**，不能接Typec-1。
![](img/roc-rk3399-pc3.jpg)








!INCLUDE "include/map.md"
